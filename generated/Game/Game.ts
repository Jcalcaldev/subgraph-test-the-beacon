// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class FoundersPackPurchased extends ethereum.Event {
  get params(): FoundersPackPurchased__Params {
    return new FoundersPackPurchased__Params(this);
  }
}

export class FoundersPackPurchased__Params {
  _event: FoundersPackPurchased;

  constructor(event: FoundersPackPurchased) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get characterNumber(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ApprovalForAll extends ethereum.Event {
  get params(): ApprovalForAll__Params {
    return new ApprovalForAll__Params(this);
  }
}

export class ApprovalForAll__Params {
  _event: ApprovalForAll;

  constructor(event: ApprovalForAll) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get approved(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class NftLocked extends ethereum.Event {
  get params(): NftLocked__Params {
    return new NftLocked__Params(this);
  }
}

export class NftLocked__Params {
  _event: NftLocked;

  constructor(event: NftLocked) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class NftUnlocked extends ethereum.Event {
  get params(): NftUnlocked__Params {
    return new NftUnlocked__Params(this);
  }
}

export class NftUnlocked__Params {
  _event: NftUnlocked;

  constructor(event: NftUnlocked) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class TransferBatch extends ethereum.Event {
  get params(): TransferBatch__Params {
    return new TransferBatch__Params(this);
  }
}

export class TransferBatch__Params {
  _event: TransferBatch;

  constructor(event: TransferBatch) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }
}

export class TransferSingle extends ethereum.Event {
  get params(): TransferSingle__Params {
    return new TransferSingle__Params(this);
  }
}

export class TransferSingle__Params {
  _event: TransferSingle;

  constructor(event: TransferSingle) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get value(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class URI extends ethereum.Event {
  get params(): URI__Params {
    return new URI__Params(this);
  }
}

export class URI__Params {
  _event: URI;

  constructor(event: URI) {
    this._event = event;
  }

  get value(): string {
    return this._event.parameters[0].value.toString();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class WithdrawalConfirmed extends ethereum.Event {
  get params(): WithdrawalConfirmed__Params {
    return new WithdrawalConfirmed__Params(this);
  }
}

export class WithdrawalConfirmed__Params {
  _event: WithdrawalConfirmed;

  constructor(event: WithdrawalConfirmed) {
    this._event = event;
  }

  get apiId(): string {
    return this._event.parameters[0].value.toString();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Game__getGen0EggUsdCostsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    return map;
  }

  getWhitelistCost(): BigInt {
    return this.value0;
  }

  getCommunityCost(): BigInt {
    return this.value1;
  }

  getLastChanceCost(): BigInt {
    return this.value2;
  }
}

export class Game__getBaseTokenIdsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    return map;
  }

  getSeedPetsBaseId(): BigInt {
    return this.value0;
  }

  getResourcesBaseId(): BigInt {
    return this.value1;
  }

  getFungiblesBaseId(): BigInt {
    return this.value2;
  }

  getNftsBaseId(): BigInt {
    return this.value3;
  }

  getEggsBaseId(): BigInt {
    return this.value4;
  }
}

export class Game__royaltyInfoResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getReceiver(): Address {
    return this.value0;
  }

  getRoyaltyAmount(): BigInt {
    return this.value1;
  }
}

export class Game extends ethereum.SmartContract {
  static bind(address: Address): Game {
    return new Game("Game", address);
  }

  getBorisAddress(): Address {
    let result = super.call(
      "getBorisAddress",
      "getBorisAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getBorisAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getBorisAddress",
      "getBorisAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getBorisBalance(): BigInt {
    let result = super.call(
      "getBorisBalance",
      "getBorisBalance():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getBorisBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getBorisBalance",
      "getBorisBalance():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getBotsFeePercentage(): BigInt {
    let result = super.call(
      "getBotsFeePercentage",
      "getBotsFeePercentage():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getBotsFeePercentage(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getBotsFeePercentage",
      "getBotsFeePercentage():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getContractBalance(): BigInt {
    let result = super.call(
      "getContractBalance",
      "getContractBalance():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getContractBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getContractBalance",
      "getContractBalance():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getContractFundsRecipient(): Address {
    let result = super.call(
      "getContractFundsRecipient",
      "getContractFundsRecipient():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getContractFundsRecipient(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getContractFundsRecipient",
      "getContractFundsRecipient():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getEggTransferAllowed(): boolean {
    let result = super.call(
      "getEggTransferAllowed",
      "getEggTransferAllowed():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_getEggTransferAllowed(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getEggTransferAllowed",
      "getEggTransferAllowed():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getFirstStageUserGen0EggLimit(): i32 {
    let result = super.call(
      "getFirstStageUserGen0EggLimit",
      "getFirstStageUserGen0EggLimit():(uint16)",
      []
    );

    return result[0].toI32();
  }

  try_getFirstStageUserGen0EggLimit(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getFirstStageUserGen0EggLimit",
      "getFirstStageUserGen0EggLimit():(uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getForgerAddress(): Address {
    let result = super.call(
      "getForgerAddress",
      "getForgerAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getForgerAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getForgerAddress",
      "getForgerAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getForgerBalance(): BigInt {
    let result = super.call(
      "getForgerBalance",
      "getForgerBalance():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getForgerBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getForgerBalance",
      "getForgerBalance():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFoundingCharacterCount(owner: Address): BigInt {
    let result = super.call(
      "getFoundingCharacterCount",
      "getFoundingCharacterCount(address):(uint256)",
      [ethereum.Value.fromAddress(owner)]
    );

    return result[0].toBigInt();
  }

  try_getFoundingCharacterCount(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getFoundingCharacterCount",
      "getFoundingCharacterCount(address):(uint256)",
      [ethereum.Value.fromAddress(owner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getGen0EggMintStatus(): i32 {
    let result = super.call(
      "getGen0EggMintStatus",
      "getGen0EggMintStatus():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_getGen0EggMintStatus(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getGen0EggMintStatus",
      "getGen0EggMintStatus():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getGen0EggUsdCosts(): Game__getGen0EggUsdCostsResult {
    let result = super.call(
      "getGen0EggUsdCosts",
      "getGen0EggUsdCosts():(uint32,uint32,uint32)",
      []
    );

    return new Game__getGen0EggUsdCostsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt()
    );
  }

  try_getGen0EggUsdCosts(): ethereum.CallResult<
    Game__getGen0EggUsdCostsResult
  > {
    let result = super.tryCall(
      "getGen0EggUsdCosts",
      "getGen0EggUsdCosts():(uint32,uint32,uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Game__getGen0EggUsdCostsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt()
      )
    );
  }

  getGen0EggsMintedCount(): BigInt {
    let result = super.call(
      "getGen0EggsMintedCount",
      "getGen0EggsMintedCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getGen0EggsMintedCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getGen0EggsMintedCount",
      "getGen0EggsMintedCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getIsContractPaused(): boolean {
    let result = super.call(
      "getIsContractPaused",
      "getIsContractPaused():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_getIsContractPaused(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getIsContractPaused",
      "getIsContractPaused():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getLastStageUserGen0EggLimit(): i32 {
    let result = super.call(
      "getLastStageUserGen0EggLimit",
      "getLastStageUserGen0EggLimit():(uint16)",
      []
    );

    return result[0].toI32();
  }

  try_getLastStageUserGen0EggLimit(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getLastStageUserGen0EggLimit",
      "getLastStageUserGen0EggLimit():(uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getNativeTokenPriceInUsdFixed(): BigInt {
    let result = super.call(
      "getNativeTokenPriceInUsdFixed",
      "getNativeTokenPriceInUsdFixed():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getNativeTokenPriceInUsdFixed(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNativeTokenPriceInUsdFixed",
      "getNativeTokenPriceInUsdFixed():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getReservedGen0EggCount(): i32 {
    let result = super.call(
      "getReservedGen0EggCount",
      "getReservedGen0EggCount():(uint16)",
      []
    );

    return result[0].toI32();
  }

  try_getReservedGen0EggCount(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getReservedGen0EggCount",
      "getReservedGen0EggCount():(uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getRoles(user: Address): Array<BigInt> {
    let result = super.call("getRoles", "getRoles(address):(uint256[])", [
      ethereum.Value.fromAddress(user)
    ]);

    return result[0].toBigIntArray();
  }

  try_getRoles(user: Address): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall("getRoles", "getRoles(address):(uint256[])", [
      ethereum.Value.fromAddress(user)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getWaitlisted(addr: Address): boolean {
    let result = super.call("getWaitlisted", "getWaitlisted(address):(bool)", [
      ethereum.Value.fromAddress(addr)
    ]);

    return result[0].toBoolean();
  }

  try_getWaitlisted(addr: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getWaitlisted",
      "getWaitlisted(address):(bool)",
      [ethereum.Value.fromAddress(addr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getWhitelisted(addr: Address): boolean {
    let result = super.call(
      "getWhitelisted",
      "getWhitelisted(address):(bool)",
      [ethereum.Value.fromAddress(addr)]
    );

    return result[0].toBoolean();
  }

  try_getWhitelisted(addr: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getWhitelisted",
      "getWhitelisted(address):(bool)",
      [ethereum.Value.fromAddress(addr)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getNativeTokenPriceInUsd(): BigInt {
    let result = super.call(
      "getNativeTokenPriceInUsd",
      "getNativeTokenPriceInUsd():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getNativeTokenPriceInUsd(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNativeTokenPriceInUsd",
      "getNativeTokenPriceInUsd():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFoundersPackCost(): BigInt {
    let result = super.call(
      "getFoundersPackCost",
      "getFoundersPackCost():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getFoundersPackCost(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getFoundersPackCost",
      "getFoundersPackCost():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFoundersPackFullCost(): BigInt {
    let result = super.call(
      "getFoundersPackFullCost",
      "getFoundersPackFullCost():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getFoundersPackFullCost(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getFoundersPackFullCost",
      "getFoundersPackFullCost():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFoundersPackPurchaseAllowed(): boolean {
    let result = super.call(
      "getFoundersPackPurchaseAllowed",
      "getFoundersPackPurchaseAllowed():(bool)",
      []
    );

    return result[0].toBoolean();
  }

  try_getFoundersPackPurchaseAllowed(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getFoundersPackPurchaseAllowed",
      "getFoundersPackPurchaseAllowed():(bool)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getFoundersPackPurchaseGasOffset(): BigInt {
    let result = super.call(
      "getFoundersPackPurchaseGasOffset",
      "getFoundersPackPurchaseGasOffset():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getFoundersPackPurchaseGasOffset(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getFoundersPackPurchaseGasOffset",
      "getFoundersPackPurchaseGasOffset():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getFoundersPackUsdCost(): BigInt {
    let result = super.call(
      "getFoundersPackUsdCost",
      "getFoundersPackUsdCost():(uint32)",
      []
    );

    return result[0].toBigInt();
  }

  try_getFoundersPackUsdCost(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getFoundersPackUsdCost",
      "getFoundersPackUsdCost():(uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPurchasedFoundersPackByAddress(purchaser: Address): boolean {
    let result = super.call(
      "getPurchasedFoundersPackByAddress",
      "getPurchasedFoundersPackByAddress(address):(bool)",
      [ethereum.Value.fromAddress(purchaser)]
    );

    return result[0].toBoolean();
  }

  try_getPurchasedFoundersPackByAddress(
    purchaser: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getPurchasedFoundersPackByAddress",
      "getPurchasedFoundersPackByAddress(address):(bool)",
      [ethereum.Value.fromAddress(purchaser)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getPurchasedFoundersPacksCount(): BigInt {
    let result = super.call(
      "getPurchasedFoundersPacksCount",
      "getPurchasedFoundersPacksCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getPurchasedFoundersPacksCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPurchasedFoundersPacksCount",
      "getPurchasedFoundersPacksCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  accountsByToken(id: BigInt): Array<Address> {
    let result = super.call(
      "accountsByToken",
      "accountsByToken(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );

    return result[0].toAddressArray();
  }

  try_accountsByToken(id: BigInt): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "accountsByToken",
      "accountsByToken(uint256):(address[])",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  balanceOf(account: Address, id: BigInt): BigInt {
    let result = super.call(
      "balanceOf",
      "balanceOf(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(id)
      ]
    );

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address, id: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "balanceOf",
      "balanceOf(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromUnsignedBigInt(id)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOfBatch(accounts: Array<Address>, ids: Array<BigInt>): Array<BigInt> {
    let result = super.call(
      "balanceOfBatch",
      "balanceOfBatch(address[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(accounts),
        ethereum.Value.fromUnsignedBigIntArray(ids)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_balanceOfBatch(
    accounts: Array<Address>,
    ids: Array<BigInt>
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "balanceOfBatch",
      "balanceOfBatch(address[],uint256[]):(uint256[])",
      [
        ethereum.Value.fromAddressArray(accounts),
        ethereum.Value.fromUnsignedBigIntArray(ids)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  contractURI(): string {
    let result = super.call("contractURI", "contractURI():(string)", []);

    return result[0].toString();
  }

  try_contractURI(): ethereum.CallResult<string> {
    let result = super.tryCall("contractURI", "contractURI():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getBaseTokenIds(): Game__getBaseTokenIdsResult {
    let result = super.call(
      "getBaseTokenIds",
      "getBaseTokenIds():(uint64,uint64,uint64,uint64,uint64)",
      []
    );

    return new Game__getBaseTokenIdsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt()
    );
  }

  try_getBaseTokenIds(): ethereum.CallResult<Game__getBaseTokenIdsResult> {
    let result = super.tryCall(
      "getBaseTokenIds",
      "getBaseTokenIds():(uint64,uint64,uint64,uint64,uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Game__getBaseTokenIdsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt()
      )
    );
  }

  getGen0EggCost(usdCost: BigInt): BigInt {
    let result = super.call(
      "getGen0EggCost",
      "getGen0EggCost(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(usdCost)]
    );

    return result[0].toBigInt();
  }

  try_getGen0EggCost(usdCost: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getGen0EggCost",
      "getGen0EggCost(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(usdCost)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getGen0EggFullCost(usdCost: BigInt): BigInt {
    let result = super.call(
      "getGen0EggFullCost",
      "getGen0EggFullCost(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(usdCost)]
    );

    return result[0].toBigInt();
  }

  try_getGen0EggFullCost(usdCost: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getGen0EggFullCost",
      "getGen0EggFullCost(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(usdCost)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getGen0EggGasOffset(): BigInt {
    let result = super.call(
      "getGen0EggGasOffset",
      "getGen0EggGasOffset():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getGen0EggGasOffset(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getGen0EggGasOffset",
      "getGen0EggGasOffset():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getGen0EggUsdCost(): BigInt {
    let result = super.call(
      "getGen0EggUsdCost",
      "getGen0EggUsdCost():(uint32)",
      []
    );

    return result[0].toBigInt();
  }

  try_getGen0EggUsdCost(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getGen0EggUsdCost",
      "getGen0EggUsdCost():(uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getGen0EggUsdCredits(owner: Address): BigInt {
    let result = super.call(
      "getGen0EggUsdCredits",
      "getGen0EggUsdCredits(address):(uint256)",
      [ethereum.Value.fromAddress(owner)]
    );

    return result[0].toBigInt();
  }

  try_getGen0EggUsdCredits(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getGen0EggUsdCredits",
      "getGen0EggUsdCredits(address):(uint256)",
      [ethereum.Value.fromAddress(owner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMintedByMintId(mintId: BigInt): boolean {
    let result = super.call(
      "getMintedByMintId",
      "getMintedByMintId(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(mintId)]
    );

    return result[0].toBoolean();
  }

  try_getMintedByMintId(mintId: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getMintedByMintId",
      "getMintedByMintId(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(mintId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getNftsIndex(): BigInt {
    let result = super.call("getNftsIndex", "getNftsIndex():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getNftsIndex(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getNftsIndex", "getNftsIndex():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOwnerOf(id: BigInt): Address {
    let result = super.call("getOwnerOf", "getOwnerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(id)
    ]);

    return result[0].toAddress();
  }

  try_getOwnerOf(id: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("getOwnerOf", "getOwnerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(id)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPendingWithdrawalByApiId(apiId: string): boolean {
    let result = super.call(
      "getPendingWithdrawalByApiId",
      "getPendingWithdrawalByApiId(string):(bool)",
      [ethereum.Value.fromString(apiId)]
    );

    return result[0].toBoolean();
  }

  try_getPendingWithdrawalByApiId(apiId: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getPendingWithdrawalByApiId",
      "getPendingWithdrawalByApiId(string):(bool)",
      [ethereum.Value.fromString(apiId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getPurchasedEggsCountByAddress(): i32 {
    let result = super.call(
      "getPurchasedEggsCountByAddress",
      "getPurchasedEggsCountByAddress():(uint16)",
      []
    );

    return result[0].toI32();
  }

  try_getPurchasedEggsCountByAddress(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getPurchasedEggsCountByAddress",
      "getPurchasedEggsCountByAddress():(uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getTotalMintedEggs(): i32 {
    let result = super.call(
      "getTotalMintedEggs",
      "getTotalMintedEggs():(uint16)",
      []
    );

    return result[0].toI32();
  }

  try_getTotalMintedEggs(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getTotalMintedEggs",
      "getTotalMintedEggs():(uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getTotalSupply(tokenId: BigInt): BigInt {
    let result = super.call(
      "getTotalSupply",
      "getTotalSupply(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );

    return result[0].toBigInt();
  }

  try_getTotalSupply(tokenId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTotalSupply",
      "getTotalSupply(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getWithdrawalGasOffset(): BigInt {
    let result = super.call(
      "getWithdrawalGasOffset",
      "getWithdrawalGasOffset():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getWithdrawalGasOffset(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getWithdrawalGasOffset",
      "getWithdrawalGasOffset():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hatchEgg(petUri: string, mintId: BigInt, petId: BigInt): BigInt {
    let result = super.call(
      "hatchEgg",
      "hatchEgg(string,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromString(petUri),
        ethereum.Value.fromUnsignedBigInt(mintId),
        ethereum.Value.fromUnsignedBigInt(petId)
      ]
    );

    return result[0].toBigInt();
  }

  try_hatchEgg(
    petUri: string,
    mintId: BigInt,
    petId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "hatchEgg",
      "hatchEgg(string,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromString(petUri),
        ethereum.Value.fromUnsignedBigInt(mintId),
        ethereum.Value.fromUnsignedBigInt(petId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isApprovedForAll(account: Address, operator: Address): boolean {
    let result = super.call(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(operator)
      ]
    );

    return result[0].toBoolean();
  }

  try_isApprovedForAll(
    account: Address,
    operator: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isApprovedForAll",
      "isApprovedForAll(address,address):(bool)",
      [
        ethereum.Value.fromAddress(account),
        ethereum.Value.fromAddress(operator)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isNftLocked(id: BigInt): boolean {
    let result = super.call("isNftLocked", "isNftLocked(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(id)
    ]);

    return result[0].toBoolean();
  }

  try_isNftLocked(id: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("isNftLocked", "isNftLocked(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(id)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  mintCharacter(
    owner: Address,
    characterUri: string,
    lock: boolean,
    apiId: string,
    mintId: BigInt
  ): BigInt {
    let result = super.call(
      "mintCharacter",
      "mintCharacter(address,string,bool,string,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromString(characterUri),
        ethereum.Value.fromBoolean(lock),
        ethereum.Value.fromString(apiId),
        ethereum.Value.fromUnsignedBigInt(mintId)
      ]
    );

    return result[0].toBigInt();
  }

  try_mintCharacter(
    owner: Address,
    characterUri: string,
    lock: boolean,
    apiId: string,
    mintId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "mintCharacter",
      "mintCharacter(address,string,bool,string,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromString(characterUri),
        ethereum.Value.fromBoolean(lock),
        ethereum.Value.fromString(apiId),
        ethereum.Value.fromUnsignedBigInt(mintId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  mintItem(
    owner: Address,
    itemUri: string,
    lock: boolean,
    apiId: string,
    mintId: BigInt
  ): BigInt {
    let result = super.call(
      "mintItem",
      "mintItem(address,string,bool,string,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromString(itemUri),
        ethereum.Value.fromBoolean(lock),
        ethereum.Value.fromString(apiId),
        ethereum.Value.fromUnsignedBigInt(mintId)
      ]
    );

    return result[0].toBigInt();
  }

  try_mintItem(
    owner: Address,
    itemUri: string,
    lock: boolean,
    apiId: string,
    mintId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "mintItem",
      "mintItem(address,string,bool,string,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(owner),
        ethereum.Value.fromString(itemUri),
        ethereum.Value.fromBoolean(lock),
        ethereum.Value.fromString(apiId),
        ethereum.Value.fromUnsignedBigInt(mintId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  royaltyInfo(param0: BigInt, salePrice: BigInt): Game__royaltyInfoResult {
    let result = super.call(
      "royaltyInfo",
      "royaltyInfo(uint256,uint256):(address,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(salePrice)
      ]
    );

    return new Game__royaltyInfoResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_royaltyInfo(
    param0: BigInt,
    salePrice: BigInt
  ): ethereum.CallResult<Game__royaltyInfoResult> {
    let result = super.tryCall(
      "royaltyInfo",
      "royaltyInfo(uint256,uint256):(address,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(salePrice)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Game__royaltyInfoResult(value[0].toAddress(), value[1].toBigInt())
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tokensByAccount(account: Address): Array<BigInt> {
    let result = super.call(
      "tokensByAccount",
      "tokensByAccount(address):(uint256[])",
      [ethereum.Value.fromAddress(account)]
    );

    return result[0].toBigIntArray();
  }

  try_tokensByAccount(account: Address): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "tokensByAccount",
      "tokensByAccount(address):(uint256[])",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  totalHolders(id: BigInt): BigInt {
    let result = super.call("totalHolders", "totalHolders(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(id)
    ]);

    return result[0].toBigInt();
  }

  try_totalHolders(id: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalHolders",
      "totalHolders(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalSupply(id: BigInt): BigInt {
    let result = super.call("totalSupply", "totalSupply(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(id)
    ]);

    return result[0].toBigInt();
  }

  try_totalSupply(id: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalSupply",
      "totalSupply(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(id)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  uri(tokenId: BigInt): string {
    let result = super.call("uri", "uri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toString();
  }

  try_uri(tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("uri", "uri(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class PauseContractCall extends ethereum.Call {
  get inputs(): PauseContractCall__Inputs {
    return new PauseContractCall__Inputs(this);
  }

  get outputs(): PauseContractCall__Outputs {
    return new PauseContractCall__Outputs(this);
  }
}

export class PauseContractCall__Inputs {
  _call: PauseContractCall;

  constructor(call: PauseContractCall) {
    this._call = call;
  }

  get paused(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class PauseContractCall__Outputs {
  _call: PauseContractCall;

  constructor(call: PauseContractCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get role(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetBorisAddressCall extends ethereum.Call {
  get inputs(): SetBorisAddressCall__Inputs {
    return new SetBorisAddressCall__Inputs(this);
  }

  get outputs(): SetBorisAddressCall__Outputs {
    return new SetBorisAddressCall__Outputs(this);
  }
}

export class SetBorisAddressCall__Inputs {
  _call: SetBorisAddressCall;

  constructor(call: SetBorisAddressCall) {
    this._call = call;
  }

  get newBoris(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetBorisAddressCall__Outputs {
  _call: SetBorisAddressCall;

  constructor(call: SetBorisAddressCall) {
    this._call = call;
  }
}

export class SetBotsFeePercentageCall extends ethereum.Call {
  get inputs(): SetBotsFeePercentageCall__Inputs {
    return new SetBotsFeePercentageCall__Inputs(this);
  }

  get outputs(): SetBotsFeePercentageCall__Outputs {
    return new SetBotsFeePercentageCall__Outputs(this);
  }
}

export class SetBotsFeePercentageCall__Inputs {
  _call: SetBotsFeePercentageCall;

  constructor(call: SetBotsFeePercentageCall) {
    this._call = call;
  }

  get feePercentage(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetBotsFeePercentageCall__Outputs {
  _call: SetBotsFeePercentageCall;

  constructor(call: SetBotsFeePercentageCall) {
    this._call = call;
  }
}

export class SetEggTransferAllowedCall extends ethereum.Call {
  get inputs(): SetEggTransferAllowedCall__Inputs {
    return new SetEggTransferAllowedCall__Inputs(this);
  }

  get outputs(): SetEggTransferAllowedCall__Outputs {
    return new SetEggTransferAllowedCall__Outputs(this);
  }
}

export class SetEggTransferAllowedCall__Inputs {
  _call: SetEggTransferAllowedCall;

  constructor(call: SetEggTransferAllowedCall) {
    this._call = call;
  }

  get allowed(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetEggTransferAllowedCall__Outputs {
  _call: SetEggTransferAllowedCall;

  constructor(call: SetEggTransferAllowedCall) {
    this._call = call;
  }
}

export class SetEggsIndexCall extends ethereum.Call {
  get inputs(): SetEggsIndexCall__Inputs {
    return new SetEggsIndexCall__Inputs(this);
  }

  get outputs(): SetEggsIndexCall__Outputs {
    return new SetEggsIndexCall__Outputs(this);
  }
}

export class SetEggsIndexCall__Inputs {
  _call: SetEggsIndexCall;

  constructor(call: SetEggsIndexCall) {
    this._call = call;
  }

  get index(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetEggsIndexCall__Outputs {
  _call: SetEggsIndexCall;

  constructor(call: SetEggsIndexCall) {
    this._call = call;
  }
}

export class SetFirstStageUserGen0EggLimitCall extends ethereum.Call {
  get inputs(): SetFirstStageUserGen0EggLimitCall__Inputs {
    return new SetFirstStageUserGen0EggLimitCall__Inputs(this);
  }

  get outputs(): SetFirstStageUserGen0EggLimitCall__Outputs {
    return new SetFirstStageUserGen0EggLimitCall__Outputs(this);
  }
}

export class SetFirstStageUserGen0EggLimitCall__Inputs {
  _call: SetFirstStageUserGen0EggLimitCall;

  constructor(call: SetFirstStageUserGen0EggLimitCall) {
    this._call = call;
  }

  get limit(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetFirstStageUserGen0EggLimitCall__Outputs {
  _call: SetFirstStageUserGen0EggLimitCall;

  constructor(call: SetFirstStageUserGen0EggLimitCall) {
    this._call = call;
  }
}

export class SetForgerAddressCall extends ethereum.Call {
  get inputs(): SetForgerAddressCall__Inputs {
    return new SetForgerAddressCall__Inputs(this);
  }

  get outputs(): SetForgerAddressCall__Outputs {
    return new SetForgerAddressCall__Outputs(this);
  }
}

export class SetForgerAddressCall__Inputs {
  _call: SetForgerAddressCall;

  constructor(call: SetForgerAddressCall) {
    this._call = call;
  }

  get newForger(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetForgerAddressCall__Outputs {
  _call: SetForgerAddressCall;

  constructor(call: SetForgerAddressCall) {
    this._call = call;
  }
}

export class SetFoundersPackGasOffsetCall extends ethereum.Call {
  get inputs(): SetFoundersPackGasOffsetCall__Inputs {
    return new SetFoundersPackGasOffsetCall__Inputs(this);
  }

  get outputs(): SetFoundersPackGasOffsetCall__Outputs {
    return new SetFoundersPackGasOffsetCall__Outputs(this);
  }
}

export class SetFoundersPackGasOffsetCall__Inputs {
  _call: SetFoundersPackGasOffsetCall;

  constructor(call: SetFoundersPackGasOffsetCall) {
    this._call = call;
  }

  get offset(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetFoundersPackGasOffsetCall__Outputs {
  _call: SetFoundersPackGasOffsetCall;

  constructor(call: SetFoundersPackGasOffsetCall) {
    this._call = call;
  }
}

export class SetFoundersPackPurchaseAllowedCall extends ethereum.Call {
  get inputs(): SetFoundersPackPurchaseAllowedCall__Inputs {
    return new SetFoundersPackPurchaseAllowedCall__Inputs(this);
  }

  get outputs(): SetFoundersPackPurchaseAllowedCall__Outputs {
    return new SetFoundersPackPurchaseAllowedCall__Outputs(this);
  }
}

export class SetFoundersPackPurchaseAllowedCall__Inputs {
  _call: SetFoundersPackPurchaseAllowedCall;

  constructor(call: SetFoundersPackPurchaseAllowedCall) {
    this._call = call;
  }

  get allowed(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetFoundersPackPurchaseAllowedCall__Outputs {
  _call: SetFoundersPackPurchaseAllowedCall;

  constructor(call: SetFoundersPackPurchaseAllowedCall) {
    this._call = call;
  }
}

export class SetFoundersPackUsdCostCall extends ethereum.Call {
  get inputs(): SetFoundersPackUsdCostCall__Inputs {
    return new SetFoundersPackUsdCostCall__Inputs(this);
  }

  get outputs(): SetFoundersPackUsdCostCall__Outputs {
    return new SetFoundersPackUsdCostCall__Outputs(this);
  }
}

export class SetFoundersPackUsdCostCall__Inputs {
  _call: SetFoundersPackUsdCostCall;

  constructor(call: SetFoundersPackUsdCostCall) {
    this._call = call;
  }

  get cost(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetFoundersPackUsdCostCall__Outputs {
  _call: SetFoundersPackUsdCostCall;

  constructor(call: SetFoundersPackUsdCostCall) {
    this._call = call;
  }
}

export class SetFoundingCharactersCountCall extends ethereum.Call {
  get inputs(): SetFoundingCharactersCountCall__Inputs {
    return new SetFoundingCharactersCountCall__Inputs(this);
  }

  get outputs(): SetFoundingCharactersCountCall__Outputs {
    return new SetFoundingCharactersCountCall__Outputs(this);
  }
}

export class SetFoundingCharactersCountCall__Inputs {
  _call: SetFoundingCharactersCountCall;

  constructor(call: SetFoundingCharactersCountCall) {
    this._call = call;
  }

  get counts(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }

  get addresses(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class SetFoundingCharactersCountCall__Outputs {
  _call: SetFoundingCharactersCountCall;

  constructor(call: SetFoundingCharactersCountCall) {
    this._call = call;
  }
}

export class SetGen0EggGasOffsetCall extends ethereum.Call {
  get inputs(): SetGen0EggGasOffsetCall__Inputs {
    return new SetGen0EggGasOffsetCall__Inputs(this);
  }

  get outputs(): SetGen0EggGasOffsetCall__Outputs {
    return new SetGen0EggGasOffsetCall__Outputs(this);
  }
}

export class SetGen0EggGasOffsetCall__Inputs {
  _call: SetGen0EggGasOffsetCall;

  constructor(call: SetGen0EggGasOffsetCall) {
    this._call = call;
  }

  get offset(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetGen0EggGasOffsetCall__Outputs {
  _call: SetGen0EggGasOffsetCall;

  constructor(call: SetGen0EggGasOffsetCall) {
    this._call = call;
  }
}

export class SetGen0EggMintStatusCall extends ethereum.Call {
  get inputs(): SetGen0EggMintStatusCall__Inputs {
    return new SetGen0EggMintStatusCall__Inputs(this);
  }

  get outputs(): SetGen0EggMintStatusCall__Outputs {
    return new SetGen0EggMintStatusCall__Outputs(this);
  }
}

export class SetGen0EggMintStatusCall__Inputs {
  _call: SetGen0EggMintStatusCall;

  constructor(call: SetGen0EggMintStatusCall) {
    this._call = call;
  }

  get status(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetGen0EggMintStatusCall__Outputs {
  _call: SetGen0EggMintStatusCall;

  constructor(call: SetGen0EggMintStatusCall) {
    this._call = call;
  }
}

export class SetGen0EggUsdCostsCall extends ethereum.Call {
  get inputs(): SetGen0EggUsdCostsCall__Inputs {
    return new SetGen0EggUsdCostsCall__Inputs(this);
  }

  get outputs(): SetGen0EggUsdCostsCall__Outputs {
    return new SetGen0EggUsdCostsCall__Outputs(this);
  }
}

export class SetGen0EggUsdCostsCall__Inputs {
  _call: SetGen0EggUsdCostsCall;

  constructor(call: SetGen0EggUsdCostsCall) {
    this._call = call;
  }

  get whitelistCost(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get communityCost(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get lastChanceCost(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetGen0EggUsdCostsCall__Outputs {
  _call: SetGen0EggUsdCostsCall;

  constructor(call: SetGen0EggUsdCostsCall) {
    this._call = call;
  }
}

export class SetLastStageUserGen0EggLimitCall extends ethereum.Call {
  get inputs(): SetLastStageUserGen0EggLimitCall__Inputs {
    return new SetLastStageUserGen0EggLimitCall__Inputs(this);
  }

  get outputs(): SetLastStageUserGen0EggLimitCall__Outputs {
    return new SetLastStageUserGen0EggLimitCall__Outputs(this);
  }
}

export class SetLastStageUserGen0EggLimitCall__Inputs {
  _call: SetLastStageUserGen0EggLimitCall;

  constructor(call: SetLastStageUserGen0EggLimitCall) {
    this._call = call;
  }

  get limit(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetLastStageUserGen0EggLimitCall__Outputs {
  _call: SetLastStageUserGen0EggLimitCall;

  constructor(call: SetLastStageUserGen0EggLimitCall) {
    this._call = call;
  }
}

export class SetNativeTokenPriceInUsdFixedCall extends ethereum.Call {
  get inputs(): SetNativeTokenPriceInUsdFixedCall__Inputs {
    return new SetNativeTokenPriceInUsdFixedCall__Inputs(this);
  }

  get outputs(): SetNativeTokenPriceInUsdFixedCall__Outputs {
    return new SetNativeTokenPriceInUsdFixedCall__Outputs(this);
  }
}

export class SetNativeTokenPriceInUsdFixedCall__Inputs {
  _call: SetNativeTokenPriceInUsdFixedCall;

  constructor(call: SetNativeTokenPriceInUsdFixedCall) {
    this._call = call;
  }

  get price(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetNativeTokenPriceInUsdFixedCall__Outputs {
  _call: SetNativeTokenPriceInUsdFixedCall;

  constructor(call: SetNativeTokenPriceInUsdFixedCall) {
    this._call = call;
  }
}

export class SetReservedGen0EggCountCall extends ethereum.Call {
  get inputs(): SetReservedGen0EggCountCall__Inputs {
    return new SetReservedGen0EggCountCall__Inputs(this);
  }

  get outputs(): SetReservedGen0EggCountCall__Outputs {
    return new SetReservedGen0EggCountCall__Outputs(this);
  }
}

export class SetReservedGen0EggCountCall__Inputs {
  _call: SetReservedGen0EggCountCall;

  constructor(call: SetReservedGen0EggCountCall) {
    this._call = call;
  }

  get count(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetReservedGen0EggCountCall__Outputs {
  _call: SetReservedGen0EggCountCall;

  constructor(call: SetReservedGen0EggCountCall) {
    this._call = call;
  }
}

export class SetRoleCall extends ethereum.Call {
  get inputs(): SetRoleCall__Inputs {
    return new SetRoleCall__Inputs(this);
  }

  get outputs(): SetRoleCall__Outputs {
    return new SetRoleCall__Outputs(this);
  }
}

export class SetRoleCall__Inputs {
  _call: SetRoleCall;

  constructor(call: SetRoleCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get role(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class SetRoleCall__Outputs {
  _call: SetRoleCall;

  constructor(call: SetRoleCall) {
    this._call = call;
  }
}

export class SetRoyaltiesCall extends ethereum.Call {
  get inputs(): SetRoyaltiesCall__Inputs {
    return new SetRoyaltiesCall__Inputs(this);
  }

  get outputs(): SetRoyaltiesCall__Outputs {
    return new SetRoyaltiesCall__Outputs(this);
  }
}

export class SetRoyaltiesCall__Inputs {
  _call: SetRoyaltiesCall;

  constructor(call: SetRoyaltiesCall) {
    this._call = call;
  }

  get newRecipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRoyaltiesCall__Outputs {
  _call: SetRoyaltiesCall;

  constructor(call: SetRoyaltiesCall) {
    this._call = call;
  }
}

export class SetWaitlistedCall extends ethereum.Call {
  get inputs(): SetWaitlistedCall__Inputs {
    return new SetWaitlistedCall__Inputs(this);
  }

  get outputs(): SetWaitlistedCall__Outputs {
    return new SetWaitlistedCall__Outputs(this);
  }
}

export class SetWaitlistedCall__Inputs {
  _call: SetWaitlistedCall;

  constructor(call: SetWaitlistedCall) {
    this._call = call;
  }

  get addresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get value(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetWaitlistedCall__Outputs {
  _call: SetWaitlistedCall;

  constructor(call: SetWaitlistedCall) {
    this._call = call;
  }
}

export class SetWhitelistedCall extends ethereum.Call {
  get inputs(): SetWhitelistedCall__Inputs {
    return new SetWhitelistedCall__Inputs(this);
  }

  get outputs(): SetWhitelistedCall__Outputs {
    return new SetWhitelistedCall__Outputs(this);
  }
}

export class SetWhitelistedCall__Inputs {
  _call: SetWhitelistedCall;

  constructor(call: SetWhitelistedCall) {
    this._call = call;
  }

  get addresses(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get value(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetWhitelistedCall__Outputs {
  _call: SetWhitelistedCall;

  constructor(call: SetWhitelistedCall) {
    this._call = call;
  }
}

export class SetWithdrawalGasOffsetCall extends ethereum.Call {
  get inputs(): SetWithdrawalGasOffsetCall__Inputs {
    return new SetWithdrawalGasOffsetCall__Inputs(this);
  }

  get outputs(): SetWithdrawalGasOffsetCall__Outputs {
    return new SetWithdrawalGasOffsetCall__Outputs(this);
  }
}

export class SetWithdrawalGasOffsetCall__Inputs {
  _call: SetWithdrawalGasOffsetCall;

  constructor(call: SetWithdrawalGasOffsetCall) {
    this._call = call;
  }

  get offset(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetWithdrawalGasOffsetCall__Outputs {
  _call: SetWithdrawalGasOffsetCall;

  constructor(call: SetWithdrawalGasOffsetCall) {
    this._call = call;
  }
}

export class TransferContractFundsCall extends ethereum.Call {
  get inputs(): TransferContractFundsCall__Inputs {
    return new TransferContractFundsCall__Inputs(this);
  }

  get outputs(): TransferContractFundsCall__Outputs {
    return new TransferContractFundsCall__Outputs(this);
  }
}

export class TransferContractFundsCall__Inputs {
  _call: TransferContractFundsCall;

  constructor(call: TransferContractFundsCall) {
    this._call = call;
  }

  get funds(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class TransferContractFundsCall__Outputs {
  _call: TransferContractFundsCall;

  constructor(call: TransferContractFundsCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get args(): InitializeCallArgsStruct {
    return changetype<InitializeCallArgsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeCallArgsStruct extends ethereum.Tuple {
  get gen0EggUri(): string {
    return this[0].toString();
  }

  get baseUri(): string {
    return this[1].toString();
  }

  get contractUri(): string {
    return this[2].toString();
  }

  get royaltiesRecipient(): Address {
    return this[3].toAddress();
  }

  get foundersPackUsdCost(): i32 {
    return this[4].toI32();
  }

  get foundersPackGasOffset(): BigInt {
    return this[5].toBigInt();
  }

  get withdrawalGasOffset(): BigInt {
    return this[6].toBigInt();
  }

  get royaltiesPercentage(): BigInt {
    return this[7].toBigInt();
  }

  get nativeTokenPriceInUsd(): BigInt {
    return this[8].toBigInt();
  }

  get paused(): boolean {
    return this[9].toBoolean();
  }

  get adminAddresses(): Array<Address> {
    return this[10].toAddressArray();
  }

  get forgerAddress(): Address {
    return this[11].toAddress();
  }

  get borisAddress(): Address {
    return this[12].toAddress();
  }

  get contractFundsRecipient(): Address {
    return this[13].toAddress();
  }

  get botsFeePercentage(): BigInt {
    return this[14].toBigInt();
  }
}

export class SetNativeTokenPriceInUsdCall extends ethereum.Call {
  get inputs(): SetNativeTokenPriceInUsdCall__Inputs {
    return new SetNativeTokenPriceInUsdCall__Inputs(this);
  }

  get outputs(): SetNativeTokenPriceInUsdCall__Outputs {
    return new SetNativeTokenPriceInUsdCall__Outputs(this);
  }
}

export class SetNativeTokenPriceInUsdCall__Inputs {
  _call: SetNativeTokenPriceInUsdCall;

  constructor(call: SetNativeTokenPriceInUsdCall) {
    this._call = call;
  }

  get price(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetNativeTokenPriceInUsdCall__Outputs {
  _call: SetNativeTokenPriceInUsdCall;

  constructor(call: SetNativeTokenPriceInUsdCall) {
    this._call = call;
  }
}

export class PurchaseFoundersPackCall extends ethereum.Call {
  get inputs(): PurchaseFoundersPackCall__Inputs {
    return new PurchaseFoundersPackCall__Inputs(this);
  }

  get outputs(): PurchaseFoundersPackCall__Outputs {
    return new PurchaseFoundersPackCall__Outputs(this);
  }
}

export class PurchaseFoundersPackCall__Inputs {
  _call: PurchaseFoundersPackCall;

  constructor(call: PurchaseFoundersPackCall) {
    this._call = call;
  }
}

export class PurchaseFoundersPackCall__Outputs {
  _call: PurchaseFoundersPackCall;

  constructor(call: PurchaseFoundersPackCall) {
    this._call = call;
  }
}

export class BurnNftCall extends ethereum.Call {
  get inputs(): BurnNftCall__Inputs {
    return new BurnNftCall__Inputs(this);
  }

  get outputs(): BurnNftCall__Outputs {
    return new BurnNftCall__Outputs(this);
  }
}

export class BurnNftCall__Inputs {
  _call: BurnNftCall;

  constructor(call: BurnNftCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BurnNftCall__Outputs {
  _call: BurnNftCall;

  constructor(call: BurnNftCall) {
    this._call = call;
  }
}

export class ConfirmWithdrawalIntentionCall extends ethereum.Call {
  get inputs(): ConfirmWithdrawalIntentionCall__Inputs {
    return new ConfirmWithdrawalIntentionCall__Inputs(this);
  }

  get outputs(): ConfirmWithdrawalIntentionCall__Outputs {
    return new ConfirmWithdrawalIntentionCall__Outputs(this);
  }
}

export class ConfirmWithdrawalIntentionCall__Inputs {
  _call: ConfirmWithdrawalIntentionCall;

  constructor(call: ConfirmWithdrawalIntentionCall) {
    this._call = call;
  }

  get apiId(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class ConfirmWithdrawalIntentionCall__Outputs {
  _call: ConfirmWithdrawalIntentionCall;

  constructor(call: ConfirmWithdrawalIntentionCall) {
    this._call = call;
  }
}

export class HatchEggCall extends ethereum.Call {
  get inputs(): HatchEggCall__Inputs {
    return new HatchEggCall__Inputs(this);
  }

  get outputs(): HatchEggCall__Outputs {
    return new HatchEggCall__Outputs(this);
  }
}

export class HatchEggCall__Inputs {
  _call: HatchEggCall;

  constructor(call: HatchEggCall) {
    this._call = call;
  }

  get petUri(): string {
    return this._call.inputValues[0].value.toString();
  }

  get mintId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get petId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class HatchEggCall__Outputs {
  _call: HatchEggCall;

  constructor(call: HatchEggCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class LockNftCall extends ethereum.Call {
  get inputs(): LockNftCall__Inputs {
    return new LockNftCall__Inputs(this);
  }

  get outputs(): LockNftCall__Outputs {
    return new LockNftCall__Outputs(this);
  }
}

export class LockNftCall__Inputs {
  _call: LockNftCall;

  constructor(call: LockNftCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LockNftCall__Outputs {
  _call: LockNftCall;

  constructor(call: LockNftCall) {
    this._call = call;
  }
}

export class MintCharacterCall extends ethereum.Call {
  get inputs(): MintCharacterCall__Inputs {
    return new MintCharacterCall__Inputs(this);
  }

  get outputs(): MintCharacterCall__Outputs {
    return new MintCharacterCall__Outputs(this);
  }
}

export class MintCharacterCall__Inputs {
  _call: MintCharacterCall;

  constructor(call: MintCharacterCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get characterUri(): string {
    return this._call.inputValues[1].value.toString();
  }

  get lock(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }

  get apiId(): string {
    return this._call.inputValues[3].value.toString();
  }

  get mintId(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class MintCharacterCall__Outputs {
  _call: MintCharacterCall;

  constructor(call: MintCharacterCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class MintEggCall extends ethereum.Call {
  get inputs(): MintEggCall__Inputs {
    return new MintEggCall__Inputs(this);
  }

  get outputs(): MintEggCall__Outputs {
    return new MintEggCall__Outputs(this);
  }
}

export class MintEggCall__Inputs {
  _call: MintEggCall;

  constructor(call: MintEggCall) {
    this._call = call;
  }
}

export class MintEggCall__Outputs {
  _call: MintEggCall;

  constructor(call: MintEggCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class MintItemCall extends ethereum.Call {
  get inputs(): MintItemCall__Inputs {
    return new MintItemCall__Inputs(this);
  }

  get outputs(): MintItemCall__Outputs {
    return new MintItemCall__Outputs(this);
  }
}

export class MintItemCall__Inputs {
  _call: MintItemCall;

  constructor(call: MintItemCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get itemUri(): string {
    return this._call.inputValues[1].value.toString();
  }

  get lock(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }

  get apiId(): string {
    return this._call.inputValues[3].value.toString();
  }

  get mintId(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class MintItemCall__Outputs {
  _call: MintItemCall;

  constructor(call: MintItemCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SafeBatchTransferFromCall extends ethereum.Call {
  get inputs(): SafeBatchTransferFromCall__Inputs {
    return new SafeBatchTransferFromCall__Inputs(this);
  }

  get outputs(): SafeBatchTransferFromCall__Outputs {
    return new SafeBatchTransferFromCall__Outputs(this);
  }
}

export class SafeBatchTransferFromCall__Inputs {
  _call: SafeBatchTransferFromCall;

  constructor(call: SafeBatchTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get ids(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SafeBatchTransferFromCall__Outputs {
  _call: SafeBatchTransferFromCall;

  constructor(call: SafeBatchTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get status(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetContractUriCall extends ethereum.Call {
  get inputs(): SetContractUriCall__Inputs {
    return new SetContractUriCall__Inputs(this);
  }

  get outputs(): SetContractUriCall__Outputs {
    return new SetContractUriCall__Outputs(this);
  }
}

export class SetContractUriCall__Inputs {
  _call: SetContractUriCall;

  constructor(call: SetContractUriCall) {
    this._call = call;
  }

  get contractUri(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetContractUriCall__Outputs {
  _call: SetContractUriCall;

  constructor(call: SetContractUriCall) {
    this._call = call;
  }
}

export class SetGen0EggUriCall extends ethereum.Call {
  get inputs(): SetGen0EggUriCall__Inputs {
    return new SetGen0EggUriCall__Inputs(this);
  }

  get outputs(): SetGen0EggUriCall__Outputs {
    return new SetGen0EggUriCall__Outputs(this);
  }
}

export class SetGen0EggUriCall__Inputs {
  _call: SetGen0EggUriCall;

  constructor(call: SetGen0EggUriCall) {
    this._call = call;
  }

  get uriToSet(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetGen0EggUriCall__Outputs {
  _call: SetGen0EggUriCall;

  constructor(call: SetGen0EggUriCall) {
    this._call = call;
  }
}

export class SetPendingWithdrawalByApiIdCall extends ethereum.Call {
  get inputs(): SetPendingWithdrawalByApiIdCall__Inputs {
    return new SetPendingWithdrawalByApiIdCall__Inputs(this);
  }

  get outputs(): SetPendingWithdrawalByApiIdCall__Outputs {
    return new SetPendingWithdrawalByApiIdCall__Outputs(this);
  }
}

export class SetPendingWithdrawalByApiIdCall__Inputs {
  _call: SetPendingWithdrawalByApiIdCall;

  constructor(call: SetPendingWithdrawalByApiIdCall) {
    this._call = call;
  }

  get apiId(): string {
    return this._call.inputValues[0].value.toString();
  }

  get value(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetPendingWithdrawalByApiIdCall__Outputs {
  _call: SetPendingWithdrawalByApiIdCall;

  constructor(call: SetPendingWithdrawalByApiIdCall) {
    this._call = call;
  }
}

export class SetTokenUriCall extends ethereum.Call {
  get inputs(): SetTokenUriCall__Inputs {
    return new SetTokenUriCall__Inputs(this);
  }

  get outputs(): SetTokenUriCall__Outputs {
    return new SetTokenUriCall__Outputs(this);
  }
}

export class SetTokenUriCall__Inputs {
  _call: SetTokenUriCall;

  constructor(call: SetTokenUriCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get tokenUri(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetTokenUriCall__Outputs {
  _call: SetTokenUriCall;

  constructor(call: SetTokenUriCall) {
    this._call = call;
  }
}

export class TestMintCall extends ethereum.Call {
  get inputs(): TestMintCall__Inputs {
    return new TestMintCall__Inputs(this);
  }

  get outputs(): TestMintCall__Outputs {
    return new TestMintCall__Outputs(this);
  }
}

export class TestMintCall__Inputs {
  _call: TestMintCall;

  constructor(call: TestMintCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class TestMintCall__Outputs {
  _call: TestMintCall;

  constructor(call: TestMintCall) {
    this._call = call;
  }
}

export class UnlockNftCall extends ethereum.Call {
  get inputs(): UnlockNftCall__Inputs {
    return new UnlockNftCall__Inputs(this);
  }

  get outputs(): UnlockNftCall__Outputs {
    return new UnlockNftCall__Outputs(this);
  }
}

export class UnlockNftCall__Inputs {
  _call: UnlockNftCall;

  constructor(call: UnlockNftCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UnlockNftCall__Outputs {
  _call: UnlockNftCall;

  constructor(call: UnlockNftCall) {
    this._call = call;
  }
}
